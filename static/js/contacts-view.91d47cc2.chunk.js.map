{"version":3,"sources":["views/Viewstyles.module.css","components/ContactList/contactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/filter.module.css","components/redux/contacts/contacts-operations.js","components/redux/contacts/contacts-selectors.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactListItem","onDelete","className","styles","contactListItem","Button","buttonDelete","color","variant","type","onClick","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","useEffect","contactsOperations","list","map","ContactForm","useState","setName","setNumber","handleChange","event","target","value","reset","form","onSubmit","e","preventDefault","find","findByName","alert","formLabel","formInput","pattern","title","required","onChange","buttonSubmit","Filter","length","filterLabel","filterInput","contactsActions","changeFilter","ContactsView","wrapper"],"mappings":"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","file":"static/js/contacts-view.91d47cc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Viewstyles_wrapper__9Z6jN\",\"title\":\"Viewstyles_title__g-CvR\",\"info\":\"Viewstyles_info__1lbaW\",\"contactListItem\":\"Viewstyles_contactListItem__2Trli\",\"contact\":\"Viewstyles_contact__3ZGrB\",\"buttonDelete\":\"Viewstyles_buttonDelete__dRTKK\",\"form\":\"Viewstyles_form__2ZW1T\",\"textField\":\"Viewstyles_textField__a-BeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__UiPd8\",\"buttonDelete\":\"contactListItem_buttonDelete__2ASLW\",\"list\":\"contactListItem_list__1xbdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__jvbJy\",\"form\":\"ContactForm_form__1oLmW\",\"formLabel\":\"ContactForm_formLabel__36qbW\",\"formInput\":\"ContactForm_formInput__2HMy_\",\"buttonSubmit\":\"ContactForm_buttonSubmit__3gaD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__3WpLp\",\"filterInput\":\"filter_filterInput__1aMve\"};","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n  .get('/contacts')\r\n  .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  .catch(error => {\r\n    dispatch(fetchContactsError(error));\r\n  });\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n  .post('/contacts', contact)\r\n  .then(({ data }) => dispatch(addContactSuccess(data)))\r\n  .catch(error => {\r\n    dispatch(addContactError(error));\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n  .delete(`/contacts/${id}`)\r\n  .then(() => dispatch(deleteContactSuccess(id)))\r\n  .catch(error => {\r\n    dispatch(deleteContactError(error));\r\n  });\r\n\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.isLoading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => (\r\n  <li className={styles.contactListItem}>\r\n    <p className={styles.contact}>\r\n      {name}: {number}{' '}\r\n    </p>\r\n    <Button\r\n     className={styles.buttonDelete}\r\n     color=\"primary\"\r\n     variant=\"contained\"\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </Button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors} from '../redux/contacts'; \r\nimport ContactlistItem from './ContactListItem'\r\nimport styles from './contactListItem.module.css'\r\n\r\nfunction  ContactList ()  { \r\n  const dispatch = useDispatch();\r\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id))\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n   return (\r\n    <ul className={styles.list}>\r\n    {visibleContacts.map(({ name, number, id }) => ( \r\n     <ContactlistItem \r\n     key={id}\r\n     id={id}\r\n     name={name}\r\n     number={number}\r\n     onDelete={()=>onDelete(id)}\r\n     \r\n    />\r\n     ))}\r\n    </ul>\r\n)};\r\n     \r\nexport default ContactList;\r\n     \r\n   ","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoaderComponent from '../../components/Loader/loader.js';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(contactsSelectors.getLoading);\r\n    const [name, setName]= useState('');\r\n    const [number, setNumber]= useState('');\r\n\r\n    const handleChange=event=>{\r\n       const { name, value } = event.target;\r\n       switch (name){\r\n           case 'name':\r\n            setName(value);\r\n           break;\r\n            case 'number':\r\n             setNumber(value);\r\n            break;\r\n \r\n             default:   \r\n             return;\r\n        }\r\n    }\r\n   \r\n    const findByName = name => {\r\n        return contacts.find(\r\n          contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n    };\r\n             \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (findByName(name)) {\r\n          alert(` ${name} is already in the phonebook.`);\r\n          reset();\r\n          return;\r\n        } \r\n          dispatch(contactsOperations.addContact(name, number));\r\n           reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form  className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.formLabel}>Name\r\n        <input className={styles.formInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        />\r\n        </label>\r\n\r\n        <label className={styles.formLabel}>Number\r\n        <input className={styles.formInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChange}\r\n        />\r\n        </label>\r\n        {!isLoading && (\r\n        <Button className={styles.buttonSubmit} type=\"submit\"  color=\"primary\"\r\n        variant=\"contained\" >Add contact</Button>\r\n        )}\r\n        {isLoading && <LoaderComponent />}\r\n        </form>\r\n        </>\r\n        );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport styles from './filter.module.css'\r\nimport { contactsActions, contactsSelectors } from '../redux/contacts';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const error = useSelector(contactsSelectors.getError);\r\n    return(\r\n    <>\r\n      {contacts.length > 0 && !error && (\r\n        <label className={styles.filterLabel}>\r\n             Find contacts by name \r\n           <input className={styles.filterInput} type=\"text\"\r\n           value={filter}\r\n            onChange={e =>\r\n          dispatch(contactsActions.changeFilter(e.target.value))}\r\n       />\r\n     </label>\r\n)}\r\n  </>\r\n  );\r\n  }\r\n export default Filter;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport { contactsOperations } from '../components/redux/contacts';\r\nimport styles from './Viewstyles.module.css';\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}